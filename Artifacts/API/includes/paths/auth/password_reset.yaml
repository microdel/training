post:
  tags: ['Authentication']
  summary: Request password reset, when forgotten
  operationId: ResetPasswordRequest
  parameters:
    - in: body
      name: resetPasswordRequest
      schema:
        type: object
        required:
          - email
        properties:
          email:
            type: string
  responses:
    200:
      description: 'Reset Password success'
      schema:
        $ref: '../../definitions.yaml#/SuccessConfirmation'
      examples:
        {
            message: 'Check your inbox and follow link in email'
        }
    404:
      description: User with this email doesn't exist
      schema:
        $ref: '../../definitions.yaml#/ErrorMessage'
    default:
      $ref: '../../responses.yaml#/APIErrorResponse'
  security: []

put:
  tags: ['Authentication']
  summary: Confirm password reset, second step (follow link from email)
  operationId: ResetPassword
  parameters:
    - in: body
      name: finishResetPasswordRequest
      description: password reset
      required: true
      schema:
        type: object
        required:
          - newPassword
          - newPasswordConfirm
        properties:
          newPassword:
            type: string
          newPasswordConfirm:
            type: string
  responses:
    200:
      description: 'Reset password: success'
      schema:
        $ref: '../../definitions.yaml#/SuccessConfirmation'
    400:
      $ref: '../../responses.yaml#/InputValidationError'
    401:
      description: 'Wrong password reset token'
      schema:
        $ref: '../../definitions.yaml#/ErrorMessage'
    default:
      $ref: '../../responses.yaml#/APIErrorResponse'
  security:
  - PasswordResetToken: []
